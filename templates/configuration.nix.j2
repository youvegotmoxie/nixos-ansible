{ config, lib, pkgs, ... }:

{
  # Add config file imports
  imports =
    [
      ./hardware-configuration.nix
      ./users.nix
      ./filesystems.nix
      ./gnome.nix
      #./hyprland.nix
    ];

  # Bootloader and kernel configuration
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;
  boot.kernelPackages = pkgs.linuxPackages_latest;

  # Set hostname and configure networking
  networking.hostName = "{{ hostname }}";
  networking.networkmanager.enable = true;
  networking.firewall.enable = true;

  # TZ and localization settings
  time.timeZone = "{{ timeZone }}";

  # Enable system services
  services.tailscale.enable = true;
  services.openssh.enable = true;

  # Set NixOS specific env vars
  environment = {
    sessionVariables = rec {
      NIXOS_OZONE_WL = "1";
      XDG_CACHE_HOME = "$HOME/.cache";
      XDG_CONFIG_HOME = "$HOME/.config";
      XDG_DATA_HOME = "$HOME/.local/share";
      XDG_STATE_HOME = "$HOME/.local/state";
      XDG_BIN_HOME = "$HOME/.local/bin";
      PATH = [
        "${XDG_BIN_HOME}"
      ];
    };
  };

  # Globally installed packages
  environment.systemPackages = with pkgs; [
    ansible
    ansible-lint
    nodejs
    btop
    clang
    git
    go
    lsb-release
    neovim
    nh
    jdk21_headless
    jq
    pinentry-curses
    python3
    rocmPackages.rocm-smi
    unzip
    vim
    wget
    yq
  ];

  # Install and configure Flatpak
  services.flatpak.enable = true;
  xdg.portal.enable = true;

  # Install and enable GDM (login manager)
  services.displayManager.gdm.enable = true;
  services.power-profiles-daemon.enable = true;

  # NixOS system settings
  system.copySystemConfiguration = true;
  system.stateVersion = "25.05";

  # Add rocmSupport to all Nix packages. Fixes no GPU stats in btop
  nixpkgs.config.rocmSupport = true;

  # Allow wheel group passwordless sudo
  security.sudo.wheelNeedsPassword = false;

  # Configure audio, keyboard, bluetooth and controllers
  hardware.bluetooth.enable = true;
  hardware.xone.enable = true;

  # Internal NixOS confguration
  nix.settings = {
    auto-optimise-store = true;
    experimental-features = [ "nix-command" "flakes" ];
  };
}
